{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { Amplify, ConsoleLogger as Logger, parseMobileHubConfig } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\n\nvar GeoClass =\n/** @class */\nfunction () {\n  function GeoClass() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Geo Options', this._config);\n  }\n  /**\n   * get the name of the module category\n   * @returns {string} name of the module category\n   */\n\n\n  GeoClass.prototype.getModuleName = function () {\n    return GeoClass.MODULE;\n  };\n  /**\n   * add plugin into Geo category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  GeoClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Geo') {\n      this._pluggables.push(pluggable);\n\n      var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      throw new Error('No plugin found in Geo for the provider');\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Geo\n   * @param {Object} config - Configuration object for Geo\n   * @return {Object} - Current configuration\n   */\n\n\n  GeoClass.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Geo');\n    if (!config) return this._config;\n    var amplifyConfig = parseMobileHubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AmazonLocationServiceProvider());\n    }\n\n    return this._config;\n  };\n  /**\n   * Get the map resources that are currently available through the provider\n   * @param {string} provider\n   * @returns - Array of available map resources\n   */\n\n\n  GeoClass.prototype.getAvailableMaps = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getAvailableMaps();\n  };\n  /**\n   * Get the map resource set as default in amplify config\n   * @param {string} provider\n   * @returns - Map resource set as the default in amplify config\n   */\n\n\n  GeoClass.prototype.getDefaultMap = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getDefaultMap();\n  };\n  /**\n   * Search by text input with optional parameters\n   * @param  {string} text - The text string that is to be searched for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n   */\n\n\n  GeoClass.prototype.searchByText = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchByText(text, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_1 = _b.sent();\n            logger.debug(error_1);\n            throw error_1;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Reverse geocoding search via a coordinate point on the map\n   * @param coordinates - Coordinates array for the search input\n   * @param options - Options parameters for the search\n   * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n   */\n\n\n  GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchByCoordinates(coordinates, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_2 = _b.sent();\n            logger.debug(error_2);\n            throw error_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  GeoClass.MODULE = 'Geo';\n  return GeoClass;\n}();\n\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);","map":{"version":3,"sources":["../src/Geo.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Amplify, ConsoleLogger as Logger, parseMobileHubConfig, } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\nvar GeoClass = /** @class */ (function () {\n    function GeoClass() {\n        this._config = {};\n        this._pluggables = [];\n        logger.debug('Geo Options', this._config);\n    }\n    /**\n     * get the name of the module category\n     * @returns {string} name of the module category\n     */\n    GeoClass.prototype.getModuleName = function () {\n        return GeoClass.MODULE;\n    };\n    /**\n     * add plugin into Geo category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    GeoClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Geo') {\n            this._pluggables.push(pluggable);\n            var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            throw new Error('No plugin found in Geo for the provider');\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Geo\n     * @param {Object} config - Configuration object for Geo\n     * @return {Object} - Current configuration\n     */\n    GeoClass.prototype.configure = function (config) {\n        var _this = this;\n        logger.debug('configure Geo');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseMobileHubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AmazonLocationServiceProvider());\n        }\n        return this._config;\n    };\n    /**\n     * Get the map resources that are currently available through the provider\n     * @param {string} provider\n     * @returns - Array of available map resources\n     */\n    GeoClass.prototype.getAvailableMaps = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getAvailableMaps();\n    };\n    /**\n     * Get the map resource set as default in amplify config\n     * @param {string} provider\n     * @returns - Map resource set as the default in amplify config\n     */\n    GeoClass.prototype.getDefaultMap = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getDefaultMap();\n    };\n    /**\n     * Search by text input with optional parameters\n     * @param  {string} text - The text string that is to be searched for\n     * @param  {SearchByTextOptions} options? - Optional parameters to the search\n     * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n     */\n    GeoClass.prototype.searchByText = function (text, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByText(text, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_1 = _b.sent();\n                        logger.debug(error_1);\n                        throw error_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverse geocoding search via a coordinate point on the map\n     * @param coordinates - Coordinates array for the search input\n     * @param options - Options parameters for the search\n     * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n     */\n    GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByCoordinates(coordinates, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_2 = _b.sent();\n                        logger.debug(error_2);\n                        throw error_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GeoClass.MODULE = 'Geo';\n    return GeoClass;\n}());\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);\n//# sourceMappingURL=Geo.js.map"]},"metadata":{},"sourceType":"module"}