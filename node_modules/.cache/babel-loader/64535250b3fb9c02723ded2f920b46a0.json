{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ListMapsRequest, ListMapsResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListMapsCommand, serializeAws_restJson1ListMapsCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists map resources in your AWS account.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LocationClient, ListMapsCommand } from \"@aws-sdk/client-location\"; // ES Modules import\n * // const { LocationClient, ListMapsCommand } = require(\"@aws-sdk/client-location\"); // CommonJS import\n * const client = new LocationClient(config);\n * const command = new ListMapsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListMapsCommandInput} for command's `input` shape.\n * @see {@link ListMapsCommandOutput} for command's `response` shape.\n * @see {@link LocationClientResolvedConfig | config} for command's `input` shape.\n *\n */\n\nvar ListMapsCommand =\n/** @class */\nfunction (_super) {\n  __extends(ListMapsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function ListMapsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  ListMapsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LocationClient\";\n    var commandName = \"ListMapsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListMapsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListMapsResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListMapsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1ListMapsCommand(input, context);\n  };\n\n  ListMapsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1ListMapsCommand(output, context);\n  };\n\n  return ListMapsCommand;\n}($Command);\n\nexport { ListMapsCommand };","map":{"version":3,"sources":["../../../commands/ListMapsCommand.ts"],"names":[],"mappings":";AACA,SAAS,eAAT,EAA0B,gBAA1B,QAAkD,oBAAlD;AACA,SACE,uCADF,EAEE,qCAFF,QAGO,4BAHP;AAIA,SAAS,cAAT,QAA+B,2BAA/B;AAEA,SAAS,OAAO,IAAI,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;AAgBG;;AACH,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA,CAArC,CAKE;AACA;;;AAEA,WAAA,eAAA,CAAqB,KAArB,EAAgD;AAAhD,QAAA,KAAA,GACE;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAFT;;AAAqB,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;iBAA2B,CAG9C;AACD;AAED;;AAEG;;;AACH,EAAA,eAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,WADF,EAEE,aAFF,EAGE,OAHF,EAGgC;AAE9B,SAAK,eAAL,CAAqB,GAArB,CAAyB,cAAc,CAAC,aAAD,EAAgB,KAAK,SAArB,EAAgC,KAAK,WAArC,CAAvC;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAZ,CAAmB,KAAK,eAAxB,CAAd;AAEQ,QAAA,MAAM,GAAK,aAAa,CAAlB,MAAN;AACR,QAAM,UAAU,GAAG,gBAAnB;AACA,QAAM,WAAW,GAAG,iBAApB;AACA,QAAM,uBAAuB,GAA4B;AACvD,MAAA,MAAM,EAAA,MADiD;AAEvD,MAAA,UAAU,EAAA,UAF6C;AAGvD,MAAA,WAAW,EAAA,WAH4C;AAIvD,MAAA,uBAAuB,EAAE,eAAe,CAAC,kBAJc;AAKvD,MAAA,wBAAwB,EAAE,gBAAgB,CAAC;AALY,KAAzD;AAOQ,QAAA,cAAc,GAAK,aAAa,CAAlB,cAAd;AACR,WAAO,KAAK,CAAC,OAAN,CACL,UAAC,OAAD,EAAuC;AACrC,aAAA,cAAc,CAAC,MAAf,CAAsB,OAAO,CAAC,OAA9B,EAAwD,OAAO,IAAI,EAAnE,CAAA;AAAsE,KAFnE,EAGL,uBAHK,CAAP;AAKD,GAzBD;;AA2BQ,EAAA,eAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,KAAlB,EAA+C,OAA/C,EAAsE;AACpE,WAAO,qCAAqC,CAAC,KAAD,EAAQ,OAAR,CAA5C;AACD,GAFO;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAA4C,OAA5C,EAAmE;AACjE,WAAO,uCAAuC,CAAC,MAAD,EAAS,OAAT,CAA9C;AACD,GAFO;;AAMV,SAAA,eAAA;AAAC,CAtDD,CAAqC,QAArC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { ListMapsRequest, ListMapsResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListMapsCommand, serializeAws_restJson1ListMapsCommand, } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists map resources in your AWS account.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LocationClient, ListMapsCommand } from \"@aws-sdk/client-location\"; // ES Modules import\n * // const { LocationClient, ListMapsCommand } = require(\"@aws-sdk/client-location\"); // CommonJS import\n * const client = new LocationClient(config);\n * const command = new ListMapsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListMapsCommandInput} for command's `input` shape.\n * @see {@link ListMapsCommandOutput} for command's `response` shape.\n * @see {@link LocationClientResolvedConfig | config} for command's `input` shape.\n *\n */\nvar ListMapsCommand = /** @class */ (function (_super) {\n    __extends(ListMapsCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function ListMapsCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    ListMapsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"LocationClient\";\n        var commandName = \"ListMapsCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: ListMapsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: ListMapsResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    ListMapsCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1ListMapsCommand(input, context);\n    };\n    ListMapsCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1ListMapsCommand(output, context);\n    };\n    return ListMapsCommand;\n}($Command));\nexport { ListMapsCommand };\n//# sourceMappingURL=ListMapsCommand.js.map"]},"metadata":{},"sourceType":"module"}